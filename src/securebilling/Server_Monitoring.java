/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Server_Monitoring.java
 *
 * Created on Mar 27, 2012, 12:00:26 PM
 */

package securebilling;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.io.*;
import java.net.*;
import java.sql.DriverManager;
import java.sql.ResultSet;

public class Server_Monitoring extends javax.swing.JFrame {

    /** Creates new form Server_Monitoring */
    public static int hour_server,min_server,sec_server,hour_end,min_end,sec_end;
    public static int bill_hour,bill_min,bill_sec;
    public static long starttime,endtime;
    public static String start,end,overall;
    public static String signature1, signature2;
     public static String stime,etime,otime;
    public Server_Monitoring() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SERVER_MONITOR");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setLayout(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Server_Monitoring", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setOpaque(false);
        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Service Start Time :");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(10, 50, 150, 20);

        jTextField1.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jPanel2.add(jTextField1);
        jTextField1.setBounds(160, 50, 120, 23);

        jTextField2.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jPanel2.add(jTextField2);
        jTextField2.setBounds(160, 90, 120, 23);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Service End Time :");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(10, 90, 130, 20);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(80, 110, 310, 150);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 16));
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Secure Billing Transactions in the Cloud Computing Environment");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(20, 30, 480, 30);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/calculate-bill.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(70, 270, 170, 50);

        jButton2.setText("TEST");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(260, 280, 100, 30);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/server_back.png"))); // NOI18N
        jPanel1.add(jLabel3);
        jLabel3.setBounds(0, 0, 480, 370);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:

        try
        {
//            ServerSocket from_client = new ServerSocket(567);
//
//                Socket timefromclient = from_client.accept();
//                BufferedReader clienttime = new BufferedReader(new InputStreamReader(timefromclient.getInputStream()));
//                hour_server = Integer.parseInt(clienttime.readLine());
//                min_server = Integer.parseInt(clienttime.readLine());
//                sec_server = Integer.parseInt(clienttime.readLine());
////                starttime = Long.parseLong(clienttime.readLine());
//                System.out.println(hour_server+":"+min_server+":"+sec_server);
//                jTextField1.setText(""+hour_server+":"+min_server+":"+sec_server);
//                start = ""+hour_server+":"+min_server+":"+sec_server;
//
//                clienttime.close();
//                from_client.close();
//
//                server_end_time s_e_t = new server_end_time();
//                s_e_t.end_time();
            String driver = "com.mysql.jdbc.Driver";
            Class.forName(driver);
            Connection connect  = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/cns","root","");
            Statement state = (Statement) connect.createStatement();
            String sql = "SELECT * FROM time";
            ResultSet rs = state.executeQuery(sql);
            while(rs.next())
            {
                stime = rs.getString(1);
                etime = rs.getString(2);
                otime = rs.getString(3);
            }
            System.out.println(stime);
            System.out.println(etime);
            System.out.println(otime);
            jTextField1.setText(stime);
            jTextField2.setText(etime);


        }

        catch(Exception e)
        {
            System.out.println(e.getMessage());

        }


    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        //calculating the overall accessing time
        bill_hour =0;bill_min=0;bill_sec=0;

        bill_hour = Math.abs(hour_end - hour_server);

        bill_min = Math.abs(min_end - min_server);
        if(bill_min>0)
        sec_end = sec_end+60;

        bill_sec = Math.abs(sec_end - sec_server);

        System.out.println(bill_hour+":"+bill_min+":"+bill_sec);
        overall = bill_hour+":"+bill_min+":"+bill_sec;

//        db data = new db();
//        data.record_data();
        
//        clearing the existing bill
        file_delete f_d = new file_delete();
        f_d.del();
        
        try
        {
            BufferedWriter bill_details = new BufferedWriter(new FileWriter("E:\\billstatus.txt",true));
            bill_details.write("");
            bill_details.write("****************** BILL STATUS *******************************");
            bill_details.newLine();
            bill_details.write("        SERVICE ACCESSING TIME : "+hour_server+":"+min_server+":"+sec_server);
            bill_details.newLine();
            bill_details.write("        SERVICE STOPPING TIME :  "+hour_end+":"+min_end+":"+sec_end);
            bill_details.newLine();
            bill_details.write("        OVERALL ACCESSING TIME : "+bill_hour+":"+bill_min+":"+bill_sec);
            bill_details.newLine();
            bill_details.close();
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
        }


        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        bill_transfer b_t = new bill_transfer();
        b_t.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Server_Monitoring().setVisible(true);
            }
        });
    }   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    public static javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

      class server_end_time
    {
        void end_time()
        {
            try
            {
                ServerSocket end_service = new ServerSocket(980);
                while(true)
                {
                    Socket ser_end = end_service.accept();
                    BufferedReader from_client = new BufferedReader(new InputStreamReader(ser_end.getInputStream()));
                    hour_end = Integer.parseInt(from_client.readLine());
                    min_end = Integer.parseInt(from_client.readLine());
                    sec_end = Integer.parseInt(from_client.readLine());
//                    endtime = Long.parseLong(from_client.readLine());
//                    System.out.println(endtime);
                    jTextField2.setText(""+hour_end+":"+min_end+":"+sec_end);
                    end = ""+hour_end+":"+min_end+":"+sec_end;
                    from_client.close();
                    end_service.close();
                }
            }
            catch(Exception e)
            {
                System.out.println(e.getMessage());
            }

        }
    }
      class file_delete
      {
         void del()
          {
             File fil = new File("E:\\billstatus.txt");
             fil.delete();
         }
      }

      class db
      {
          void record_data()
          {
              String driver = "com.mysql.jdbc.Driver";
              try
              {
                  signature1 = CNS_Signature.signature;
                  signature2 = CNS_Signature.signature_client;
                  Class.forName(driver);
                  Connection connect = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/cns","root","");
                  Statement state = (Statement) connect.createStatement();
                  String sql = "INSERT INTO time VALUES('"+start+"','"+end+"','"+overall+"')";
                  state.executeUpdate(sql);
                  System.out.println("INSERTED heress");

              }
              catch(Exception e)
              {
                  System.out.println(e.getMessage());
              }
          }
      }
}
